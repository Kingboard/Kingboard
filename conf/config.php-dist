<?php
/**
 * Kingboard Configuration file, edit to setup kingboard the way you require it
 */

// ensure APP_PATH is set, if this is not working change to the
// directory kingboard is running from
if(!defined("APP_PATH"))
    define("APP_PATH", realpath(dirname(__FILE__) . "/.."));


// kingboard relies on composer to install and load dependencies usually you should
// not need to edit this
require_once APP_PATH . "/vendor/autoload.php";
\King23\Core\Classloader::register();
\King23\Core\Classloader::init(APP_PATH . "/vendor/king23/king23/lib");
\King23\Core\Classloader::init(APP_PATH . "/src");

$reg = \King23\Core\Registry::getInstance();

// set this to the email you want to send from
$reg->sendFromEmail = "kingboard@eve-kill.net";

// set this to your kingboards host
$reg->baseHost = "kingboard.eve-kill.net";

// configure your MongoDB connection here
$connection = new Mongo('localhost');
$reg->mongo = array(
    'connection' => $connection, 
    'db' => $connection->Kingboard   // if your database is named differently, please edit
);

// disable mongodb's timeout
MongoCursor::$timeout = -1;

// the amount of kills displayed in a kill list page
$reg->killListConfig = array("perPage" => 25);


// pheal is used to connect to CCP's API.
$pc = PhealConfig::getInstance();

// the path that is used for pheals cache if you have several applications
// on your machine that use Pheal, you might want to set this to a shared location
// or you might want to use a different Cache implementation.
$pc->cache = new PhealFileCache(APP_PATH . "/cache/");

// raise this if your cronjobs break with CCP's api timeouting alot
$pc->http_timeout = 40;

// Twig Template configuration
Twig_Autoloader::register();
$reg->twig = new Twig_Environment(new Twig_Loader_Filesystem(APP_PATH ."/templates"), array(
    "cache" => APP_PATH . "/cache/templates_c", // we use a sub directory of our cachedir here
    "debug" => false // debug mode
));

// since images are not included with Kingboard but use CCP's image servers
// in most cases you will want to keep this this way.
$reg->imagePaths = array(
    'ships' => 'http://image.eveonline.com/Render/',
    'items' => 'http://image.eveonline.com/Type/',
    'characters' => 'http://image.eveonline.com/Character/',
    'corporations' => 'http://image.eveonline.com/Corporation/',
    'alliances' => 'http://image.eveonline.com/Alliance/'
);

// this can be fetched from a specific ownerID provider
// which maps host to id for example on hosted boards
$reg->ownerID = false;

// if ownerID is set, this needs to be set to alliance/corporation/pilot
$reg->ownerType = "alliance";

// set this to something meaningfull to replace the word "Kingboard" in the top menu
// $reg->ownerName = "Kingboard";

// uncomment when using OAuth2 login opposed to regular or jabber auth.
// you need to register with either facebook or google for your kingboard instance
// so you can access their apis (both work aswell ;)
/*
$reg->auth = '\Kingboard\Views\Auth\OAuth2';
$reg->oAuth2ProviderList = array(
    // currently only googles api is supported, see the auth_class for information
    // on how to implement further OAuth2 Providers
    "google" => array(
        // the client id given to you by the OAuth2 Provider
        "client_id" => "MYCLIENTID.apps.googleusercontent.com",

        // the client secret given to you by the OAuth2 Provider
        "client_secret" => "MYCLIENTSECRET",

        // this is only to be edited if you dont use the default route
        "redirect_url" => "http://" . $reg->baseHost . "/oauth2/callback/google/",

        // this class depends on the api used to fetch email from the oauth providers api
        // in this case google.
        "auth_class" => '\Kingboard\Lib\Auth\Google'
    ),
    "facebook" => array(
        // the client id given to you by the OAuth2 Provider
        "client_id" => "YOURCLIENT_ID",

        // the client secret given to you by the OAuth2 Provider
        "client_secret" => "YOURCLIENT_SECRET",

        // this is only to be edited if you dont use the default route
        "redirect_url" => "http://" . $reg->baseHost . "/oauth2/callback/facebook/",

        // this class depends on the api used to fetch email from the oauth providers api
        // in this case google.
        "auth_class" => '\Kingboard\Lib\Auth\Facebook'
    )
);
*/


// choose bootstrap theme (see public/themes/*)
$reg->theme = "default";

// choose banner grafics
$reg->headerImage = "/images/banner/kingboard.png";

// highly experimental feature, you should not use this if you don't
// know exactly what this is doing
/*$reg->stomp = array(
    "post" => false,
    "read" => false,
    "user" => "guest",
    "passwd" => "guest",
    "url" => "tcp://stomp.3rdpartyeve.net:61613",
    "destination_read" => "/topic/kills",
    "destination_post" => array("/topic/kills", "/queue/kills")
);*/

// include the routes configuration
require_once("routes.php");

// start session
session_start();
