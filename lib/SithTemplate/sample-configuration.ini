;
; SithTemplate 1.1 sample configuration file
; Version: $Id$
;
; You should keep it outside webroot
;

[Prefixes]
;
; Will be prefixed to all input filenames.
; In default file I/O - directory containing source templates.
inputPrefix  = "./templates/"

;
; Will be prefixed to all output filenames.
; In default file I/O - directory to hold compiled templates and metadata.
outputPrefix = "./templates_c/"

[Plugins]
;
; Plugins to load on compiler startup.
; If "yes", then all plugins on all search paths are loaded.
; loadPlugins[] = "StdLibEx"
; loadPlugins[] = "YourPlugin"
loadPlugins = yes

;
; Plugins' search paths.
; pluginsPaths[] = "./your_plugin_directory/"
; pluginsPaths[] = "/usr/share/sithtemplate/plugins/"

;
; Do you want to use default plugins search path?
useDefaultPluginsPath = yes

[Compilation]
;
; Recompilation mode.
;
; RECOMPILE_NEVER      = -1 (never recompile)
; RECOMPILE_IF_CHANGED =  0 (recompile only if source template has been modified)
; RECOMPILE_ALWAYS     =  1 (always recompile)
recompilationMode = 0

;
; Default I/O driver.
defaultIODriver = "file"

[Security]
;
; Should variables be auto-escaped?
autoEscape = no

;
; Should {{ internal.request }} be allowed?
allowInternalRequest = yes

;
; Should {{ internal.const }} be allowed?
allowInternalConstants = yes

;
; Should {% include %} be restricted to the same I/O driver?
restrictIncludeIO = no

;
; Should {% extend %} be restricted to the same I/O driver?
restrictExtendIO = no

[Security Lists]
;
; Security lists evaluation mode.
; Any list can be replaced by a boolean "yes", to indicate that
; it should match everything.
;
; SECURITY_DISABLE     = 0 (lists are not used, everything is allowed)
; SECURITY_ALLOW_ALL   = 1 (allow all, then check 'disallowed' list)
; SECURITY_ALLOW_DENY  = 2 (check 'allowed' list, then 'disallowed')
; SECURITY_DENY_ALLOW  = 3 (check 'disallowed' list, then 'allowed')
; SECURITY_DENY_ALL    = 4 (disallow all, then check 'allowed' list)
securityEvalMode = 0

;
; Whitelist of plugins
allowedPlugins = yes

;
; Blacklist of plugins
; disallowedPlugins[] = "BadPlugin"

;
; Whitelist of tags
allowedTags = yes

;
; Blacklist of tags
; disallowedTags[] = "bad_tag"

;
; Whitelist of filters
allowedFilters = yes

;
; Blacklist of filters
; disallowedFilters[] = "bad_filter"

;
; Whitelist of functions
allowedFunctions = yes

;
; Blacklist of functions
; disallowedFunctions[] = "call_user_func"
; disallowedFunctions[] = "call_user_func_array"
